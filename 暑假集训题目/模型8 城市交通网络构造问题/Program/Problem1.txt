function D = InitD()
D = zeros(25);
D(:,:) = inf;   % 全置为inf
D(logical(eye(25))) = 0;    % 对角线置0

a = [1	1	2	3	3	4	4	5	6	7	7	8	8	9	10	11	12	13	13	13	13	14	15	16	16	17	17	18	19	21	21	24];
b = [2	6	3	4	8	5	9	10	11	8	14	15	16	10	18	19	13	14	19	20	22	15	22	17	22	18	23	25	20	22	23	25];
d = [128	106	127	109	90	132	112	111	167	92	82	64	91	113	112	119	91	81	137	130	126	72	63	128	95	66	70	67	134	93	112	108];
    
for i = 1:length(a)
    D(a(i),b(i)) = d(i);
    D(b(i),a(i)) = d(i);
end




function d = floyd(D)
d = D;
n = 25;
for k = 1:n
    for i = 1:n
        for j = 1:n
            if d(i,j) > d(i,k) + d(k,j)
                d(i,j) = d(i,k) + d(k,j);
            end
        end
    end
end




function [d,sp] = ShortestPath(D)
center = 15;

d = floyd(D);
for i = 1:25
   sp(i) = d(i, center);
end

%sp = dijkstra(D,15);




function T = Valid(S)
d = [105	136	181	135	71	113	108	110	96	81	104	92	88	120	118	239	68];
c = [7.5	6	6	6.5	10	6.5	7.5	8	8	9.5	9	9	9.5	8	8.5	6	10];
budget = [3000 2000 1000 1000 1000 3000 2000 1000 1000 1000];

T = 1;
roads = 17;
years = 10;

m = zeros(1,years);
for i = 1:roads
    year = S(i);
    m(year) = m(year) + d(i)*c(i);
end

for i = 1:years
    if(m(i) > budget(i))
        T = 0;
        break;
    end
end




function [m,M] = Fitness(S)

a = [2	4	6	6	7	9	9	10	11	14	15	16	18	20	20	20	23];
b = [7	8	7	13	15	16	17	17	12	22	16	21	23	22	21	24	25];
d = [105	136	181	135	71	113	108	110	96	81	104	92	88	120	118	239	68];
c = [7.5	6	6	6.5	10	6.5	7.5	8	8	9.5	9	9	9.5	8	8.5	6	10];

w = [1.2 2.1 4.2 2.8 1.0 1.5 3.3 5.1 0.8 0.6 0.9 3.2 5.8 2.7 0 6.3 2.2 3.9 3.1 2.8 4.4 5.5 0.8 0.5 0.4];

for i = 1:17
    road(i).a = a(i);
    road(i).b = b(i);
    road(i).d = d(i);
    road(i).c = c(i);
end

D = InitD();

years = 10;
roads = 17;
cities = 25;

SP = [];
for i=1:years
    [D, SP(i,:)] = ShortestPath(D);     % 动态更新每一年的最短距离
    for j=1:roads
        if S(j) == i
            D(road(j).a, road(j).b) = road(j).d;
            D(road(j).b, road(j).a) = road(j).d;
        end
    end   
end

for i = 1:years
   m(i) = 0;
   for j = 1:cities
       if j ~= 15
           m(i) = m(i) + SP(i,j)*w(j)*10/10000;     % 第i年的物流成本
       end
   end
end

M = sum(m);     % 10年总物流成本




function [m,M] = Fitness(S)

a = [2	4	6	6	7	9	9	10	11	14	15	16	18	20	20	20	23];
b = [7	8	7	13	15	16	17	17	12	22	16	21	23	22	21	24	25];
d = [105	136	181	135	71	113	108	110	96	81	104	92	88	120	118	239	68];
c = [7.5	6	6	6.5	10	6.5	7.5	8	8	9.5	9	9	9.5	8	8.5	6	10];

w = [1.2 2.1 4.2 2.8 1.0 1.5 3.3 5.1 0.8 0.6 0.9 3.2 5.8 2.7 0 6.3 2.2 3.9 3.1 2.8 4.4 5.5 0.8 0.5 0.4];

for i = 1:17
    road(i).a = a(i);
    road(i).b = b(i);
    road(i).d = d(i);
    road(i).c = c(i);
end

D = InitD();

years = 10;
roads = 17;
cities = 25;

SP = [];
for i=1:years
    [D, SP(i,:)] = ShortestPath(D);     % 动态更新每一年的最短距离
    for j=1:roads
        if S(j) == i
            D(road(j).a, road(j).b) = road(j).d;
            D(road(j).b, road(j).a) = road(j).d;
        end
    end   
end

for i = 1:years
   m(i) = 0;
   for j = 1:cities
       if j ~= 15
           m(i) = m(i) + SP(i,j)*w(j)*10/10000;     % 第i年的物流成本
       end
   end
end

M = sum(m);     % 10年总物流成本






